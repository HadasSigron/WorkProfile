name: WorkProfile CI/CD Pipeline (Docker Hub)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: workprofile

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tag: ${{ steps.generate-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Lint and unit tests
        run: |
          flake8 .
          pytest --disable-warnings tests/test_app.py

      - name: Generate image tag
        id: generate-tag
        run: |
          TAG="build-$(date +%Y%m%d)-${GITHUB_SHA::7}"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "Generated tag: ${TAG}"

  e2e-tests:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install E2E helpers
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.38.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Build and start (compose)
        run: docker-compose -f docker-compose/docker-compose.yml up -d --build

      - name: Wait and show ps
        run: |
          sleep 10
          docker-compose -f docker-compose/docker-compose.yml ps

      - name: Smoke /
        run: curl --fail http://localhost:8080/

      - name: Smoke /health
        run: curl --fail http://localhost:8080/health

      - name: Run E2E tests
        env:
          NGINX_URL: http://localhost:8080
        run: python tests/e2e_tests.py

      - name: Compose logs (on failure)
        if: failure()
        run: |
          docker-compose -f docker-compose/docker-compose.yml ps
          docker-compose -f docker-compose/docker-compose.yml logs app || true
          docker-compose -f docker-compose/docker-compose.yml logs mysql || true

      - name: Compose cleanup
        if: always()
        run: docker-compose -f docker-compose/docker-compose.yml down --volumes --remove-orphans

  push-image:
    needs:
      - build-test
      - e2e-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          TAG="${{ needs.build-test.outputs.tag }}"
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${TAG} .
          docker tag  ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${TAG} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker images
        run: |
          TAG="${{ needs.build-test.outputs.tag }}"
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${TAG}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
